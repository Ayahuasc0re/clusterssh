=head1 FILES

=over

=item F</etc/clusters>, F<$HOME/.clusterssh/clusters>

These files contain a list of tags to server names mappings.  When any name
is used on the command line it is checked to see if it is a tag.
If it is a tag, then the tag is replaced with the list of servers.  The
format is as follows:

S<< <tag> [user@]<server> [user@]<server> [...] >>

  e.g.

  # List of servers in live
  live admin1@server1 admin2@server2 server3 server4

All comments (marked by a #) and blank lines are ignored.  Tags may be
nested, but be aware of using recursive tags as they are not checked for.

Extra cluster files may also be specified either as an option on the
command line (see C<cluster-file>) or in the user's F<$HOME/.clusterssh/config>
file (see C<extra_cluster_file> configuration option).

NOTE: the last tag read overwrites any pre-existing tag of that name

NOTE: there is a special cluster tag called C<default> - any tags or hosts
included within this tag will be automatically opened if no other tags
are specified on the command line.

=item F</etc/tags>, F<$HOME/.clusterssh/tags>

Very similar to F<cluster> files but the definition is reversed.  The
format is:

S<< <host> <tag> [...] >>

This allows one host to be specified as a member of a number of tags.  This
format can be clearer than using F<clusters> files.

Extra tag files may be specified either as an option (see C<tag-file>) or within
the user's F<$HOME/.clusterssh/config> file (see C<extra_tag_file>
configuration option).

NOTE: All tags are added together

=item F</etc/csshrc> & F<$HOME/.clusterssh/config>

This file contains configuration overrides - the defaults are as marked.
Default options are overwritten first by the global file, and then by the
user file.

B<NOTE:> values for entries do not need to be quoted unless it is required
for passing arguments, e.g.

  terminal_allow_send_events="-xrm '*.VT100.allowSendEvents:true'"

should be written as

  terminal_allow_send_events=-xrm '*.VT100.allowSendEvents:true'

=over

=item auto_close = 5

Close terminal window after this many seconds.  If set to 0 will instead wait
on input from the user in each window before closing. Can be overridden
by C<-K> on the command line.

=item auto_quit = yes

Automatically quit after the last client window closes.  Set to anything
other than "yes" to disable.  Can be overridden by C<-Q> on the command line.

=item clusters = <blank>

Define a number of cluster tags in addition to (or to replace) tags defined
in the F</etc/clusters> file.  The format is:

 clusters = <tag1> <tag2> <tag3>
 <tag1> = host1 host2 host3
 <tag2> = user@host4 user@host5 host6
 <tag3> = <tag1> <tag2>

As with the F</etc/clusters> file, be sure not to create recursively nested tags.

=item comms = ssh

Sets the default communication method (initially taken from the name of the
program, but can be overridden here).

=item console_position = <null>

Set the initial position of the console - if empty then let the window manager
decide.  Format is '+<x>+<y>', i.e. '+0+0' is top left hand corner of the screen,
'+0-70' is bottom left hand side of screen (more or less).

=item external_cluster_command = <null>

Define the full path to an external command that can be used to resolve tags
to host names.  This command can be written in any language.  The script must
accept a list of tags to resolve and output a list of hosts on a single line.
Any tags that cannot be resolved should be returned unchanged.

A non-0 exit code will be counted as an error, a warning will be printed and
output ignored.

=item extra_cluster_file = <null>

Define an extra cluster file in the format of F</etc/clusters>.  Multiple
files can be specified, separated by commas.  Both ~ and $HOME are acceptable
as a reference to the user's home directory, i.e.

 extra_cluster_file = ~/clusters, $HOME/clus

=item ignore_host_errors

THIS OPTION IS DEPRECATED.  It has been left in so current systems continue
to function as expected.

=item key_addhost = Control-Shift-plus

Default key sequence to open AddHost menu.  See below notes on shortcuts.

=item key_clientname = Alt-n

Default key sequence to send cssh client names to client.  See below notes
on shortcuts.

=item key_localname = Alt-l

Default key sequence to send hostname of local server to client.  See below
notes on shortcuts.

=item key_paste = Control-v

Default key sequence to paste text into the console window.  See below notes
on shortcuts.

=item key_quit = Control-q

Default key sequence to quit the program (will terminate all open windows).
See below notes on shortcuts.

=item key_retilehosts = Alt-r

Default key sequence to retile host windows.  See below notes on shortcuts.

=item key_username = Alt-u

Default key sequence to send username to client.  See below notes
on shortcuts.

=item macro_servername = %s

=item macro_hostname = %h

=item macro_username = %u

=item macro_newline = %n

=item macro_version = %v

Change the replacement macro used when either using a 'Send' menu item, or when
pasting text into the main console.

=item macros_enabled = yes

Enable or disable macro replacement.  Note: this affects pasting into the
main console, items on the 'Send' menu and key_clientname, key_localname,
key_servername and key_username.

=item max_addhost_menu_cluster_items = 6

Maximum number of entries in the 'Add Host' menu cluster list before
scrollbars are used

=item max_host_menu_items = 30

Maximum number of hosts to put into the host menu before starting a new column

=item menu_host_autotearoff = 0

=item menu_send_autotearoff = 0

When set to non-0 will automatically tear-off the host or send menu at
program start

=item mouse_paste = Button-2 (middle mouse button)

Default key sequence to paste text into the console window using the mouse.
See below notes on shortcuts.

=item rsh = rsh

=item ssh = ssh

=item telnet = telnet

Set the path to the specific binary to use for the communication method, else
uses the first match found in $PATH

=item rsh_args = <blank>

=item ssh_args = "-x -o ConnectTimeout=10"

=item telnet_args = <blank>

Sets any arguments to be used with the communication method (defaults to ssh
arguments).

B<NOTE:> The given defaults are based on OpenSSH, not commercial ssh software.

B<NOTE:> Any "generic" change to the method (e.g., specifying the ssh port to use)
should be done in the medium's own config file (see C<ssh_config> and
F<$HOME/.ssh/config>).

=item screen_reserve_top = 0

=item screen_reserve_bottom = 60

=item screen_reserve_left = 0

=item screen_reserve_right = 0

Number of pixels from the screen's side to reserve when calculating screen
geometry for tiling.  Setting this to something like 50 will help keep cssh
from positioning windows over your window manager's menu bar if it draws one
at that side of the screen.

=item rsh = /path/to/rsh

=item ssh = /path/to/ssh

Depending on the value of comms, set the path of the communication binary.

=item terminal = /path/to/terminal

Path to the X-Windows terminal used for the client.

=item terminal_args = <blank>

Arguments to use when opening terminal windows.  Otherwise takes defaults
from F<$HOME/.Xdefaults> or $<$HOME/.Xresources> file.

=item terminal_font = 6x13

Font to use in the terminal windows.  Use standard X font notation.

=item terminal_reserve_top = 5

=item terminal_reserve_bottom = 0

=item terminal_reserve_left = 5

=item terminal_reserve_right = 0

Number of pixels from the terminal's side to reserve when calculating screen
geometry for tiling.  Setting these will help keep cssh from positioning
windows over your scroll and title bars or otherwise overlapping the windows
too much.

=item terminal_colorize = 1

If set to 1 (the default), then "-bg" and "-fg" arguments will be added
to the terminal invocation command-line.  The terminal will be colored
in a pseudo-random way based on the host name; while the color of a terminal
is not easily predicted, it will always be the same color for a given host
name.  After a while, you will recognize hosts by their characteristic
terminal color.

=item terminal_bg_style = dark

If set to dark, the terminal background will be set to black and
the foreground to the pseudo-random color.  If set to light, then the
foreground will be black and the background the pseudo-random color.  If
terminal_colorize is zero, then this option has no effect.

=item terminal_size = 80x24

Initial size of terminals to use. NOTE: the number of lines (24) will be
decreased when resizing terminals for tiling, not the number of characters (80).

=item terminal_title_opt = -T

Option used with C<terminal> to set the title of the window

=item terminal_allow_send_events = -xrm '*.VT100.allowSendEvents:true'

Option required by the terminal to allow XSendEvents to be received

=item title = cssh

Title of windows to use for both the console and terminals.

=item unmap_on_redraw = no

Tell Tk to use the UnmapWindow request before redrawing terminal windows.
This defaults to "no" as it causes some problems with the FVWM window
manager.  If you are experiencing problems with redraws, you can set it to
"yes" to allow the window to be unmapped before it is repositioned.

=item use_all_a_records = no

If a hostname resolves to multiple IP addresses, set to C<yes> to connect
to all of them, not just the first one found.

=item use_hotkeys = yes

Setting to anything other than C<yes> will disable all hotkeys.

=item user = $LOGNAME

Sets the default user for running commands on clients.

=item window_tiling = yes

Perform window tiling (set to C<no> to disable)

=item window_tiling_direction = right

Direction to tile windows, where "right" means starting top left and moving
right and then down, and anything else means starting bottom right and moving
left and then up

=back

B<NOTE:> The key shortcut modifiers must be in the form "Control", "Alt", or
"Shift", i.e. with the first letter capitalised and the rest lower case.  Keys
may also be disabled individually by setting to the word "null".

=item F<$HOME/.csshrc_send_menu>

This (optional) file contains items to populate the send menu.  The
default entry could be written as:

  <send_menu>
    <menu title="Use Macros">
        <toggle/>
        <accelerator>ALT-p</accelerator>
    </menu>
    <menu title="Remote Hostname">
        <command>%s</command>
        <accelerator>ALT-n</accelerator>
    </menu>
    <menu title="Local Hostname">
        <command>%s</command>
        <accelerator>ALT-l</accelerator>
    </menu>
    <menu title="Username">
        <command>%u</command>
        <accelerator>ALT-u</accelerator>
    </menu>
    <menu title="Test Text">
        <command>echo "ClusterSSH Version: %v%n</command>
    </menu>
  </send_menu>

Submenus can also be specified as follows:

  <send_menu>
    <menu title="Default Entries">
      <detach>yes</detach>
      <menu title="Hostname">
          <command>%s</command>
          <accelerator>ALT-n</accelerator>
      </menu>
    </menu>
  </send_menu>

B<Caveats:>

=over 4

=item There is currently no strict format checking of this file.

=item The format of the file may change in the future

=item If the file exists, the default entry (Hostname) is not added

=back

The following replacement macros are available (note: these can be changed in the configuration file):

=over 4

=item %s

Hostname part of the specific connection string to each client, minus any
username or port

=item %u

Username part of the connection string to each client

=item %h

Hostname of server where cssh is being run from

=item %n

<RETURN> code

=back

B<NOTE:> requires L<XML::Simple> to be installed

=back
